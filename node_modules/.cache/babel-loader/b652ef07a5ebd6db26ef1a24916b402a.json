{"ast":null,"code":"import _initializerDefineProperty from \"/Users/xuzijun/Desktop/\\u6D4B\\u8BD5/part01/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/xuzijun/Desktop/\\u6D4B\\u8BD5/part01/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/xuzijun/Desktop/\\u6D4B\\u8BD5/part01/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _jsxFileName = \"/Users/xuzijun/Desktop/\\u6D4B\\u8BD5/part01/todo/src/containers/test1/Mobx.jsx\",\n    _class,\n    _descriptor,\n    _descriptor2,\n    _class3;\n\nimport React, { Component } from 'react';\nimport { observable, action } from 'mobx';\nimport { Observer } from 'mobx-react'; // class Store{\n//     @observable count=0\n//     @action increment(){\n//         console.log(this.count)\n//         this.count++\n//     }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet MyState = (_class = class MyState {\n  constructor() {\n    _initializerDefineProperty(this, \"num\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"addNum\", _descriptor2, this);\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"num\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 0;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"addNum\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      this.num++;\n    };\n  }\n})), _class); // const count = observable({\n//     count: 0\n// })\n// const increment = action(()=>{count.count++ \n//     console.log('count ',count.count)})\n\nconst newState = new MyState(); // const num=observable.box(99)\n// // const increment = action(() => count.count++)\n// console.log(num.get(),'num')\n\nlet Mobx = Observer(_class3 = class Mobx extends Component {\n  render() {\n    // console.log(this.props,'this.props')\n    // console.log(this,\"this\")\n    // const {store} = this.props\n    // let store =new Store()\n    // console.log(store)\n    // console.log(count)\n    console.log(count, 'count');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mobx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: count.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: increment,\n          children: \"Increment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}) || _class3;\n\nexport default Mobx;","map":{"version":3,"sources":["/Users/xuzijun/Desktop/测试/part01/todo/src/containers/test1/Mobx.jsx"],"names":["React","Component","observable","action","Observer","MyState","num","newState","Mobx","render","console","log","count","increment"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAAQC,UAAR,EAAmBC,MAAnB,QAAgC,MAAhC;AACA,SAAQC,QAAR,QAAuB,YAAvB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;IAEMC,O,aAAN,MAAMA,OAAN,CAAa;AAAA;AAAA;;AAAA;AAAA;;AAAA,C,qEACRH,U;;;;;WAAe,C;;0EACfC,M;;;;;WAAgB,MAAM;AACnB,WAAKG,GAAL;AACD,K;;cAEP;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAC,IAAIF,OAAJ,EAAf,C,CAEA;AAEA;AACA;;IAIMG,I,GADLJ,Q,WAAD,MACMI,IADN,SACmBP,SADnB,CAC4B;AACxBQ,EAAAA,MAAM,GAAE;AACJ;AACA;AAEA;AAEA;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ,EAAkB,OAAlB;AACA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAIA,KAAK,CAACA;AAAV;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,+BACI;AAAQ,UAAA,OAAO,EAAEC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AApBuB,C;;AAsB5B,eAAeL,IAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport {observable,action} from 'mobx'\nimport {Observer} from 'mobx-react'\n\n// class Store{\n//     @observable count=0\n//     @action increment(){\n//         console.log(this.count)\n//         this.count++\n//     }\n// }\n\nclass MyState{\n    @observable num=0\n    @action addNum = () => {\n        this.num++;\n      };\n}\n// const count = observable({\n//     count: 0\n// })\n// const increment = action(()=>{count.count++ \n//     console.log('count ',count.count)})\n\nconst newState=new MyState()\n\n// const num=observable.box(99)\n\n// // const increment = action(() => count.count++)\n// console.log(num.get(),'num')\n\n\n@Observer\nclass Mobx extends Component{\n    render(){\n        // console.log(this.props,'this.props')\n        // console.log(this,\"this\")\n\n        // const {store} = this.props\n\n        // let store =new Store()\n        // console.log(store)\n        // console.log(count)\n        console.log(count,'count')\n        return(\n            <div>\n                <h1>Mobx</h1>\n                <p>{count.count}</p>\n                <p>\n                    <button onClick={increment} >Increment</button>\n                </p>\n            </div>\n        )\n    }\n}\nexport default Mobx;"]},"metadata":{},"sourceType":"module"}